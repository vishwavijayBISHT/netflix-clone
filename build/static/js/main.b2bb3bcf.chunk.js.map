{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setmovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","key","id","src","poster_path","backdrop_path","alt","name","API_KEY","fetchNetflixOriginals","fetchTrending","fetchTop","fetchAction","fetchComedy","fetchHorror","fetchRomance","fetchDocu","Banner","setMovie","request1","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2bb3bcf.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setmovies] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setmovies(request.data.results);\r\n\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            className={`row__post ${isLargeRow && \"row__postlarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"502bb190ecac9adb7f3a8881dc2ce1cf\";\r\n\r\nconst request = {\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTrending: `/discover/tv?api_key=${API_KEY}&language=en-US`,\r\n  fetchTop: `/discover/tv?api_key=${API_KEY}&language=en-US`,\r\n  fetchAction: `/discover/tv?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedy: `/discover/tv?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorror: `/discover/tv?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomance: `/discover/tv?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocu: `/discover/tv?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default request;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport request from \"./request\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request1 = await axios.get(request.fetchNetflixOriginals);\r\n      setMovie(\r\n        request1.data.results[\r\n          Math.floor(Math.random() * request1.data.results.length - 1)\r\n        ]\r\n      );\r\n\r\n      return request1;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url( \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_content\">\r\n        <h1>{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <div className=\"buttons\">\r\n          <button className=\"but\">Play</button>\r\n          <button className=\"but\">My List</button>\r\n        </div>\r\n        <div className=\"dis\">{movie?.overview}</div>\r\n      </div>\r\n      <div className=\"fade\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"black\"}`}>\r\n      <img\r\n        className=\"logo\"\r\n        src=\"https://www.freepnglogos.com/uploads/netflix-logo-text-emblem-31.png\"\r\n        alt=\"netflix logo text emblem\"\r\n      ></img>\r\n      <img\r\n        className=\"logo2\"\r\n        src=\"https://www.freepnglogos.com/uploads/hacker-png/hacker-user-icons-18.png\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport request from \"./request\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Banner></Banner>\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={request.fetchNetflixOriginals}\n        isLargeRow\n      ></Row>\n      <Row title=\"Trending Now\" fetchUrl={request.fetchTrending}></Row>\n      <Row title=\"Top Rated\" fetchUrl={request.fetchTop}></Row>\n      <Row title=\"Action\" fetchUrl={request.fetchAction}></Row>\n      <Row title=\"Comedy\" fetchUrl={request.fetchComedy}></Row>\n      <Row title=\"Horror\" fetchUrl={request.fetchHorror}></Row>\n      <Row title=\"Romentic\" fetchUrl={request.fetchRomance}></Row>\n      <Row title=\"Documetries\" fetchUrl={request.fetchDocu}></Row>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}